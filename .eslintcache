[{"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/index.js":"1","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/App.js":"2","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/reportWebVitals.js":"3","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/shared/campsites.js":"5","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/MainComponent.js":"7","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/FooterComponent.js":"9","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/HomeComponent.js":"10","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/ContactComponent.js":"11","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/shared/comments.js":"12","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/shared/partners.js":"13","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/shared/promotions.js":"14","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/AboutComponent.js":"15","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/redux/configureStore.js":"16","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/redux/campsites.js":"17","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/redux/comments.js":"18","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/redux/partners.js":"19","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/redux/promotions.js":"20","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/redux/ActionCreators.js":"21","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/redux/ActionTypes.js":"22","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/LoadingComponent.js":"23","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/redux/forms.js":"24","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/shared/baseUrl.js":"25"},{"size":706,"mtime":1609538196765,"results":"26","hashOfConfig":"27"},{"size":619,"mtime":1610323228371,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1608684346644,"results":"29","hashOfConfig":"27"},{"size":2044,"mtime":1610826045798,"results":"30","hashOfConfig":"27"},{"size":1242,"mtime":1609618615039,"results":"31","hashOfConfig":"27"},{"size":6662,"mtime":1610832596792,"results":"32","hashOfConfig":"27"},{"size":3815,"mtime":1610845657624,"results":"33","hashOfConfig":"27"},{"size":5368,"mtime":1610349405406,"results":"34","hashOfConfig":"27"},{"size":1950,"mtime":1609544556885,"results":"35","hashOfConfig":"27"},{"size":1502,"mtime":1610826187126,"results":"36","hashOfConfig":"27"},{"size":10988,"mtime":1610760828440,"results":"37","hashOfConfig":"27"},{"size":4243,"mtime":1609618635483,"results":"38","hashOfConfig":"27"},{"size":1054,"mtime":1609618639967,"results":"39","hashOfConfig":"27"},{"size":303,"mtime":1609618644095,"results":"40","hashOfConfig":"27"},{"size":4034,"mtime":1609732804704,"results":"41","hashOfConfig":"27"},{"size":790,"mtime":1610760433728,"results":"42","hashOfConfig":"27"},{"size":669,"mtime":1610755513120,"results":"43","hashOfConfig":"27"},{"size":569,"mtime":1610829180570,"results":"44","hashOfConfig":"27"},{"size":182,"mtime":1610682049112,"results":"45","hashOfConfig":"27"},{"size":616,"mtime":1610825675650,"results":"46","hashOfConfig":"27"},{"size":4356,"mtime":1610829131558,"results":"47","hashOfConfig":"27"},{"size":445,"mtime":1610824275338,"results":"48","hashOfConfig":"27"},{"size":234,"mtime":1610755665156,"results":"49","hashOfConfig":"27"},{"size":166,"mtime":1610760126276,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1610824147930,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1u5parp",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/index.js",[],["108","109"],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/App.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/reportWebVitals.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/shared/campsites.js",[],["110","111"],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["112","113","114"],"import React, { Component} from 'react';\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\n\nfunction RenderCampsite({campsite}) {\n    return (\n        <div className=\"col-md-5 m-1\">\n            <Card>\n                <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\n                <CardBody>\n                    <CardText>{campsite.description}</CardText>\n                </CardBody>\n            </Card>\n        </div>\n    )\n}\n\nfunction RenderComments({comments, postComment, campsiteId}) {\n    if(comments) {\n        return (\n            <div className=\"col-md-5 m-1\">\n                <h4>Comments</h4>\n                {comments.map(comments => <div key={comments.id}>{comments.text} <br/>\n                --{comments.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', \n                month: 'short', day: '2-digit'}).format(new Date(Date.parse(comments.date)))}</div>)}\n                <CommentForm campsiteId={campsiteId} postComment={postComment} />\n            </div>\n        )\n    }\n    return <div />\n}\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false,\n            rating: '',\n            author: '',\n            text: '',\n            touched: {\n                rating: false,\n                author: false,\n                text: false\n            }\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\n    }\n\n    render() {\n        return (\n            <div>\n                <Button outline className=\"fa fa-pencil fa-lg\" onClick={this.toggleModal}> Submit Comment</Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"author\">Your Name</Label>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\" \n                                    placeholder=\"Your Name\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, \n                                        minLength: minLength(2),\n                                        maxLength: maxLength(15)\n                                    }}\n                                />\n                                <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"text\">Comment</Label>\n                                <Control.textarea model=\".text\" id=\"text\" name=\"text\" rows=\"6\" className=\"form-control\" />\n                            </div>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nfunction CampsiteInfo(props) {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    if (props.campsite) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>{props.campsite.name}</h2>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderCampsite campsite={props.campsite} />\n                    <RenderComments \n                        comments={props.comments}\n                        postComment={props.postComment}\n                        campsiteId={props.campsite.id} \n                    />\n                </div>\n            </div>\n        )\n    }\n    return <div />;\n}\n\nexport default CampsiteInfo;","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/MainComponent.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/FooterComponent.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/HomeComponent.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/ContactComponent.js",["115","116","117","118","119","120","121","122"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log(\"Current state is: \" + JSON.stringify(values));\n        alert(\"Current state is: \" + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                    <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/shared/comments.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/shared/partners.js",[],["123","124"],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/shared/promotions.js",[],["125","126"],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/AboutComponent.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/redux/configureStore.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/redux/campsites.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/redux/comments.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/redux/partners.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/redux/promotions.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/redux/ActionCreators.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/redux/ActionTypes.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/components/LoadingComponent.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/redux/forms.js",[],"/home/giantlilanimals/Desktop/Nucamp_Folder/3-React/nucampsite/src/shared/baseUrl.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"127","replacedBy":"131"},{"ruleId":"129","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":79,"column":33,"nodeType":"135","endLine":79,"endColumn":116},{"ruleId":"133","severity":1,"message":"136","line":89,"column":33,"nodeType":"135","endLine":97,"endColumn":35},{"ruleId":"133","severity":1,"message":"137","line":112,"column":33,"nodeType":"135","endLine":112,"endColumn":123},{"ruleId":"138","severity":1,"message":"139","line":4,"column":33,"nodeType":"140","messageId":"141","endLine":4,"endColumn":40},{"ruleId":"133","severity":1,"message":"136","line":79,"column":37,"nodeType":"135","endLine":87,"endColumn":39},{"ruleId":"133","severity":1,"message":"136","line":104,"column":37,"nodeType":"135","endLine":112,"endColumn":39},{"ruleId":"133","severity":1,"message":"136","line":129,"column":37,"nodeType":"135","endLine":138,"endColumn":39},{"ruleId":"133","severity":1,"message":"136","line":156,"column":37,"nodeType":"135","endLine":163,"endColumn":39},{"ruleId":"133","severity":1,"message":"142","line":180,"column":45,"nodeType":"135","endLine":184,"endColumn":47},{"ruleId":"133","severity":1,"message":"134","line":190,"column":37,"nodeType":"135","endLine":191,"endColumn":66},{"ruleId":"133","severity":1,"message":"137","line":200,"column":37,"nodeType":"135","endLine":203,"endColumn":39},{"ruleId":"127","replacedBy":"143"},{"ruleId":"129","replacedBy":"144"},{"ruleId":"127","replacedBy":"145"},{"ruleId":"129","replacedBy":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],["147"],["148"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["147"],["148"],["147"],["148"],"no-global-assign","no-unsafe-negation"]